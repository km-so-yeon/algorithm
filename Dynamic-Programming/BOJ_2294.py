import sys
input = sys.stdin.readline

# DP의 모든 초기값 100001(최대값)
# DP의 값 = 해당 인덱스의 값을 만들 때 필요한 동전의 개수
# 만약 첫번째 동전이 1일 경우
#    1원을 만드려면 0원에 1원을 더하는 것 DP[0] + 1 = DP[1-1] + 1 = 1 -> 이 값이 초기값보다 작으므로 DP[1] = 1
#    2원을 만드려면 1원에 1원을 더하는 것 DP[1] + 1 = DP[2-1] + 1 = 2 -> 이 값이 초기값보다 작으므로 DP[2] = 2
#    3원을 만드려면 2원에 1원을 더하는 것 DP[2] + 1 = DP[3-1] + 1 = 3 -> 이 값이 초기값보다 작으므로 DP[3] = 3
#    4원을 만드려면 3원에 1원을 더하는 것 DP[3] + 1 = DP[4-1] + 1 = 4 -> 이 값이 초기값보다 작으므로 DP[4] = 4
# 두번째 동전이 4일 경우 (4이하의 값은 못만드므로 4부터 시작)
#    4원을 만드려면 0원에 4원을 더하는 것 DP[0] + 1 = DP[4-4] + 1 = 1 -> 이 값이 이전값보다 작으므로 DP[4] = 1
#    5원을 만드려면 1원에 4원을 더하는 것 DP[1] + 1 = DP[5-4] + 1 = 2 -> 이 값이 이전값보다 작으므로 DP[5] = 2
# 일반화
# 해당 값을 만들 수 있는 동전의 개수 = (DP[해당값 - 동전값] + 1)과 현재값 중 작은 것

# 입력
n, k = map(int, input().split())
coins = []
DP = [10001] * (k + 1)
DP[0] = 0

for _ in range(n) :
    coins.append(int(input()))

for coin in coins :
    for i in range(coin, k + 1) :
        DP[i] = min(DP[i], DP[i - coin] + 1)

if DP[k] == 10001 :
    print(-1)
else :
    print(DP[k])